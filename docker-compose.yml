services:
  frontend:
    build:
      context: ./desafio-app
    container_name: frontend
    ports:
      - "3000:3000"
    networks:
      - app-network
    volumes:
      - ./desafio-app:/app
    environment:
      - NODE_ENV=production 
    command: sh -c "yarn install && yarn build && yarn start"

  api:
    build:
      context: ./desafio-api
      dockerfile: Dockerfile.api
    container_name: api
    ports:
      - "9000:9000"
    networks:
      - app-network
    volumes:
      - ./desafio-api:/var/www/html
    environment:
      - DB_HOST=db
      - DB_NAME=desafio_db
      - DB_USER=root
      - DB_PASS=root
      - DB_PORT=3306
      - PERMISSION_DECRYPT_KEY=b6e707bbcb17068566b6ce4151fa3d62
      - IV=cd49f75812db21aa7310164e57770432
      - SECRET_KEY_JWT=dbf57a5550f86ce8ebc7c745017f172e
    depends_on:
      - db
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000"]
      interval: 30s
      retries: 3

  db:
    image: mysql:8.0
    container_name: db
    environment:
      MYSQL_ROOT_PASSWORD: root 
      MYSQL_DATABASE: desafio_db 
    ports:
      - "3306:3306" 
    networks:
      - app-network 
    volumes:
      - db_data:/var/lib/mysql  
      - ./desafio-api/init.sql:/docker-entrypoint-initdb.d/init.sql 

networks:
  app-network:
    driver: bridge

volumes:
  db_data:
    driver: local
